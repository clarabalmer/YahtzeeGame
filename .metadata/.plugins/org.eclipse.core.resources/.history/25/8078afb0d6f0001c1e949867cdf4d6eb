public class Scorecard {
	//NOTE: getters get integers, setters take ints and set as strings. Let's see how we like it?
	private String aces = "";
	private String twos = "";
	private String threes = "";
	private String fours = "";
	private String fives = "";
	private String sixes = "";
	private String upperTotal = "";
	private String bonus = "";
	private boolean bonusBool;
	private String threeOfAKind = "";
	private String fourOfAKind = "";
	private String fullHouse = "";
	private String smallStraight = "";
	private String largeStraight = "";
	private String yahtzee = "";
	private String chance = "";
	private String lowerTotal = "";
	
	//constructors
	Scorecard() {}
	
	//methods
	@Override
	public String toString() {
		return "Aces: " + getAces() + " Twos: " + getTwos() + " Threes: " + getThrees() + " Fours: " + getFours() + " Fives: " + getFives() + " Sixes: " + getSixes() + " Three of a kind: " + getThreeOfAKind() + " Four of a kind:" + getFourOfAKind() + " Full House: " + getFullHouse() + " Small straight: " + getSmallStraight() + " Large straight: " + getLargeStraight() + " Yahtzee: " + getYahtzee() + " Chance: " + getChance(); 
	}
	
	public void scoreFinal() {
		int upperSum = getAces() + getTwos() + getThrees() + getFours() + getFives() + getSixes();
		upperTotal = Integer.toString(upperSum);
		if (upperSum >= 63) {
			bonus = " + 35 bonus!";
			bonusBool = true;
		}
		int lowerSum = getThreeOfAKind() + getFourOfAKind() + getFullHouse() + getSmallStraight() + getLargeStraight() + getYahtzee() + getChance();
		lowerTotal = Integer.toString(lowerSum);
	}
	public int scoreAces(int[] diceList) {
		int result = 0;
		for (int i = 0; i < 5; i++) {
			if (diceList[i] == 1) {
				result++;
			}
		}
		return result;
	}
	public int scoreTwos(int[] diceList) {
		int result = 0;
		for (int i = 0; i < 5; i++) {
			if (diceList[i] == 2) {
				result += 2;
			}
		}
		return result;
	}
	public int scoreThrees(int[] diceList) {
		int result = 0;
		for (int i = 0; i < 5; i++) {
			if (diceList[i] == 3) {
				result += 3;
			}
		}
		return result;
	}
	public int scoreFours(int[] diceList) {
		int result = 0;
		for (int i = 0; i < 5; i++) {
			if (diceList[i] == 4) {
				result += 4;
			}
		}
		return result;
	}
	public int scoreFives(int[] diceList) {
		int result = 0;
		for (int i = 0; i < 5; i++) {
			if (diceList[i] == 5) {
				result += 5;
			}
		}
		return result;
	}
	public int scoreSixes(int[] diceList) {
		int result = 0;
		for (int i = 0; i < 5; i++) {
			if (diceList[i] == 6) {
				result += 6;
			}
		}
		return result;
	}
	public int scoreThreeOfAKind(int[] diceList) {
		//add yahtzee bonus if statements
		int sum = 0;
		for (int i = 0; i < 5; i++) {
			sum += diceList[i];
		}
		int count = 1;
		for (int i = 1; i < 5; i++) {
			if (diceList[0] == diceList[i]) {
				count++;
			}
			if (count >= 3) {
				return sum;
			}
		}
		count = 1;
		for (int i = 2; i < 5; i++) {
			if (diceList[1] == diceList[i]) {
				count++;
			}
			if (count >= 3) {
				return sum;
			}
		}
		count = 1;
		for (int i = 3; i < 5; i++) {
			if (diceList[2] == diceList[i]) {
				count++;
			}
			if (count >= 3) {
				return sum;
			}
		}
		return 0;
	}
	public int scoreFourOfAKind(int[] diceList) {
		//add yahtzee bonus if statement
		int sum = 0;
		for (int i = 0; i < 5; i++) {
			sum += diceList[i];
		}
		int count = 1;
		for (int i = 1; i < 5; i++) {
			if (diceList[0] == diceList[i]) {
				count++;
			}
			if (count >= 4) {
				return sum;
			}
		}
		count = 1;
		for (int i = 2; i < 5; i++) {
			if (diceList[1] == diceList[i]) {
				count++;
			}
			if (count >= 4) {
				return sum;
			}
		}
		return 0;
	}
	public int scoreFullHouse(int[] diceList) {
		int a = diceList[0];
		int b = 0;
		int aCount = 1;
		int bCount = 0;
		for (int i = 1; i < 5; i++) {
			if (diceList[i] == a) {
				aCount++;
			} else {
				b = diceList[i];
			}
		}
		for (int i = 1; i < 5; i++) {
			if (diceList[i] == b) {
				bCount++;
			}
		}
		if (aCount + bCount == 5 && bCount != 0) {
			return 25;
		} else {
			return 0;
		}
	}
	public int scoreSmallStraight(int[] diceList) {
		boolean one = false;
		boolean two = false;
		boolean three = false;
		boolean four = false;
		boolean five = false;
		boolean six = false;
		for (int i = 0; i < 5; i++) {
			if (diceList[i] == 1) {
				one = true;
			}
			if (diceList[i] == 2) {
				two = true;
			}
			if (diceList[i] == 3) {
				three = true;
			}
			if (diceList[i] == 4) {
				four = true;
			}
			if (diceList[i] == 5) {
				five = true;
			}
			if (diceList[i] == 6) {
				six = true;
			}
		}
		if (three && four) {
			if (one && two || two && five || five && six) {
				return 30;
			}
		}
		return 0;
	}
	public int scoreLargeStraight(int[] diceList) {
		boolean one = false;
		boolean two = false;
		boolean three = false;
		boolean four = false;
		boolean five = false;
		boolean six = false;
		for (int i = 0; i < 5; i++) {
			if (diceList[i] == 1) {
				one = true;
			}
			if (diceList[i] == 2) {
				two = true;
			}
			if (diceList[i] == 3) {
				three = true;
			}
			if (diceList[i] == 4) {
				four = true;
			}
			if (diceList[i] == 5) {
				five = true;
			}
			if (diceList[i] == 6) {
				six = true;
			}
		}
		if (two && three && four && five) {
			if (one || six) {
				return 40;
			}
		}
		return 0;
	}
	public int scoreYahtzee (int[] diceList) {
		int first = diceList[0];
		if (first == diceList[1] && first == diceList[2] && first == diceList[3] && first == diceList[4]) {
			return 50;
		}
		return 0;
	}
	public int scoreChance (int[] diceList) {
		int sum = 0;
		for (int i = 0; i < 5; i++) {
			sum += diceList[i];
		}
		return sum;
	}
	public void displayScorecard() {
		System.out.println("UPPER SECTION:		      CODE|SCORE");
		System.out.println("Aces				 A|" + aces);
		System.out.println("Twos				 2|" + twos);
		System.out.println("Threes				 3|" + threes);
		System.out.println("Fours				 4|" + fours);
		System.out.println("Fives				 5|" + fives);
		System.out.println("Sixes				 6|" + sixes);
		System.out.println("==================================|" + upperTotal + bonus);
		System.out.println("LOWER SECTION:		      CODE|SCORE");
		System.out.println("3 of a Kind			3K|" + threeOfAKind);
		System.out.println("4 of a Kind			4K|" + fourOfAKind);
		System.out.println("Full House			FH|" + fullHouse);
		System.out.println("Small Straight			SS|" + smallStraight);
		System.out.println("Large Straight			LS|" + largeStraight);
		System.out.println("Yahtzee				 Y|" + yahtzee);
		System.out.println("Chance				 C|" + chance);
		System.out.println("==================================|" + lowerTotal);
	}
	
	//getters/setters
	public int getAces() {
		return Integer.parseInt(aces);
	};
	public void setAces(int aces) {
		this.aces = String.valueOf(aces);
	}
	public int getTwos() {
		return Integer.parseInt(twos);
	}
	public void setTwos(int twos) {
		this.twos = String.valueOf(twos);
	}
	public int getThrees() {
		return Integer.parseInt(threes);
	}
	public void setThrees(int threes) {
		this.threes = String.valueOf(threes);
	}
	public int getFours() {
		return Integer.parseInt(fours);
	}
	public void setFours(int fours) {
		this.fours = String.valueOf(fours);
	}
	public int getFives() {
		return Integer.parseInt(fives);
	}
	public void setFives(int fives) {
		this.fives = String.valueOf(fives);
	}
	public int getSixes() {
		return Integer.parseInt(sixes);
	}
	public void setSixes(int sixes) {
		this.sixes = String.valueOf(sixes);
	}
	public int getUpperTotal() {
		return Integer.parseInt(upperTotal);
	}
	public void setUpperTotal(String upperTotal) {
		this.upperTotal = String.valueOf(upperTotal);
	}
	//do I need getters/setters for bonus?
	public boolean getBonusBool() {
		return bonusBool;
	}
	public void setBonusBool(boolean bonusBool) {
		this.bonusBool = bonusBool;
	}
	public int getThreeOfAKind() {
		return Integer.parseInt(threeOfAKind);
	}
	public void setThreeOfAKind(int threeOfAKind) {
		this.threeOfAKind = String.valueOf(threeOfAKind);
	}
	public int getFourOfAKind() {
		return Integer.parseInt(fourOfAKind);
	}
	public void setFourOfAKind(int fourOfAKind) {
		this.fourOfAKind = String.valueOf(fourOfAKind);
	}
	public int getFullHouse() {
		return Integer.parseInt(fullHouse);
	}
	public void setFullHouse(int fullHouse) {
		this.fullHouse = String.valueOf(fullHouse);
	}
	public int getSmallStraight() {
		return Integer.parseInt(smallStraight);
	}
	public void setSmallStraight(int smallStraight) {
		this.smallStraight = String.valueOf(smallStraight);
	}
	public int getLargeStraight() {
		return Integer.parseInt(largeStraight);
	}
	public void setLargeStraight(int largeStraight) {
		this.largeStraight = String.valueOf(largeStraight);
	}
	public int getYahtzee() {
		return Integer.parseInt(yahtzee);
	}
	public void setYahtzee(int yahtzee) {
		this.yahtzee = String.valueOf(yahtzee);
	}
	public int getChance() {
		return Integer.parseInt(chance);
	}
	public void setChance(int chance) {
		this.chance = String.valueOf(chance);
	}
	public int getLowerTotal() {
		return Integer.parseInt(lowerTotal);
	}
	public void setLowerTotal(int lowerTotal) {
		this.lowerTotal = String.valueOf(lowerTotal);
	}
	
}
